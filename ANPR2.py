# -*- coding: utf-8 -*-
"""Untitled15.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Qjh5LiFSXKk8GqkDFlJGUkEMQkfjIOAi
"""

import streamlit as st
import cv2
import numpy as np
from PIL import Image
import easyocr
from inference_sdk import InferenceHTTPClient

st.title('Vehicle Number Plate Detection & OCR')

# Use Streamlit secrets for secure API key retrieval
api_key = st.secrets["ROBOFLOW_API_KEY"]
MODEL_ID = "vehicle-registration-plates-trudk/2"  # Set your fixed model ID here

uploaded_file = st.file_uploader("Upload an image of a vehicle", type=['jpg', 'jpeg', 'png'])

def ocr(img_np):
    reader = easyocr.Reader(['en'], gpu=False)
    result = reader.readtext(img_np)
    extracted_text = ""
    for (_, text, _) in result:
        extracted_text += text + " "
    return extracted_text.strip()

if uploaded_file is not None:
    image = Image.open(uploaded_file).convert('RGB')
    img_np = np.array(image)[:, :, ::-1]  # PIL RGB to OpenCV BGR

    st.image(image, caption="Sample", use_container_width=True)

    CLIENT = InferenceHTTPClient(
        api_url="https://serverless.roboflow.com",
        api_key=api_key
    )

    with st.spinner('Detecting number plate...'):
        result = CLIENT.infer(img_np, model_id=MODEL_ID)

    if result and result.get('predictions'):
        prediction = result['predictions'][0]
        x, y, width, height = prediction['x'], prediction['y'], prediction['width'], prediction['height']
        x1 = int(x - width / 2)
        y1 = int(y - height / 2)
        x2 = int(x + width / 2)
        y2 = int(y + height / 2)
        cropped_img = img_np[y1:y2, x1:x2]

        # Draw bounding box on original image
        display_img = img_np.copy()
        cv2.rectangle(display_img, (x1, y1), (x2, y2), (0,255,0), 2)
        st.image(display_img[:, :, ::-1], caption='Detected Number Plate', use_container_width=True)

        # OCR
        text = ocr(cropped_img)
        st.subheader('Extracted Number Plate Text')
        st.success(text if text else "No text detected")

        st.image(cropped_img[:, :, ::-1], caption='Cropped Number Plate', use_container_width=False)
    else:
        st.warning("No number plate detected. Please try with a clearer image.")
else:
    st.info("Please upload a vehicle image for detection and OCR.")
